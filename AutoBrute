#!/usr/bin/ruby
##############################################################
##                  PatatorAuto V0.1                         #
##      Wrapper for Patator bruteforce tool                  #
##                                                           #
##          Created by ZigzagSecurity                        #
##                                                           #
##############################################################

require 'optionparser'
require 'colorize'
require "tty-prompt"
#scrapper nokogiri
#open3 to execute command

# Welcome message
def greetings()
    puts "  
     ____       _        _              _         _        
    |  _ \\ __ _| |_ __ _| |_ ___  _ __ / \\  _   _| |_ ___  
    | |_) / _` | __/ _` | __/ _ \\| '__/ _ \\| | | | __/ _ \\ 
    |  __/ (_| | || (_| | || (_) | | / ___ \\ |_| | || (_) |
    |_|   \\__,_|\\__\\__,_|\\__\\___/|_|/_/   \\_\\__,_|\\__\\___/ 
                                   by ZigzagSecurity V0.1 ".red

end

# Global variables
$running = true
# create the prompt
$prompt = TTY::Prompt.new
$modules = { "ssh_module" => "Brute-force SSH" }

# Options for each modules
$ssh_module = {"host":[{"desc":"target host","state":"required","value":""}],"port":[{"desc":"target port","state":"required","value":"22"}],"user":[{"desc":"usernames to test (value or file)","state":"required","value":"root"}],"password":[{"desc":"passwords to test (value or file)","state":"required","value":"passwd"}],"auth_type":[{"desc":"type of password authentication to use [password|keyboard-interactive|auto]","state":"optional","value":""}],"keyfile":[{"desc":"file with RSA, DSA or ECDSA private key to test","state":"optional","value":""}],"persistent":[{"desc":"use persistent connections [1|0]","state":"optional","value":""}]}



# End message
def bye()
    puts "Okei, bye !"
    $running = false
end

def displayHelp()
    puts "Here is the help"
end

# print the available modules
def printModules()
    puts "Available modules:\n"
    $modules.each do |x,y|
        puts "#{x}: #{y}"
    end
end


def setup_module(module_name)
    exit = false
    options = 

    #command = "patator ssh_login host=#{host} user=#{user} password=#{password} -x ignore:mesg='Authentication failed.'"

    until exit
        input = ask("#{module_name} >")

        case input
        when "back"
            exit = true
        when "quit"
            exit = true
            bye()
        when "show options"
            # print options or options always displayed
        when "run"
            # run the command
        when "set [arg]"
            # set the value in the options
        end

    
    end

end

#process the user inputs
def process(input)
    full_input = input
    args = input.split(" ")

    case args[0]
    when "quit"
        bye()
    when "help"
        displayHelp()
    when "modules"
        printModules()
    when "use"
        setup_module(args[1])
    else
        puts "Wrong options"
        displayHelp()
    end

end

def ask(name)
    #prompt = $prompt
    return $prompt.ask(name)
end


# Start he main 
greetings()

# main loop
while $running

    input = ask("AutoBrute > ")
    process(input)

end